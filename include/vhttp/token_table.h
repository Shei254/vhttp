/*
 * Copyright (c) 2014 DeNA Co., Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

/* DO NOT EDIT! generated by tokens.pl */
#ifndef vhttp__token_table_h
#define vhttp__token_table_h

#define vhttp_TOKEN_AUTHORITY (vhttp__tokens + 0)
#define vhttp_TOKEN_METHOD (vhttp__tokens + 1)
#define vhttp_TOKEN_PATH (vhttp__tokens + 2)
#define vhttp_TOKEN_PROTOCOL (vhttp__tokens + 3)
#define vhttp_TOKEN_SCHEME (vhttp__tokens + 4)
#define vhttp_TOKEN_STATUS (vhttp__tokens + 5)
#define vhttp_TOKEN_ACCEPT (vhttp__tokens + 6)
#define vhttp_TOKEN_ACCEPT_CHARSET (vhttp__tokens + 7)
#define vhttp_TOKEN_ACCEPT_ENCODING (vhttp__tokens + 8)
#define vhttp_TOKEN_ACCEPT_LANGUAGE (vhttp__tokens + 9)
#define vhttp_TOKEN_ACCEPT_RANGES (vhttp__tokens + 10)
#define vhttp_TOKEN_ACCESS_CONTROL_ALLOW_CREDENTIALS (vhttp__tokens + 11)
#define vhttp_TOKEN_ACCESS_CONTROL_ALLOW_HEADERS (vhttp__tokens + 12)
#define vhttp_TOKEN_ACCESS_CONTROL_ALLOW_METHODS (vhttp__tokens + 13)
#define vhttp_TOKEN_ACCESS_CONTROL_ALLOW_ORIGIN (vhttp__tokens + 14)
#define vhttp_TOKEN_ACCESS_CONTROL_EXPOSE_HEADERS (vhttp__tokens + 15)
#define vhttp_TOKEN_ACCESS_CONTROL_REQUEST_HEADERS (vhttp__tokens + 16)
#define vhttp_TOKEN_ACCESS_CONTROL_REQUEST_METHOD (vhttp__tokens + 17)
#define vhttp_TOKEN_AGE (vhttp__tokens + 18)
#define vhttp_TOKEN_ALLOW (vhttp__tokens + 19)
#define vhttp_TOKEN_ALT_SVC (vhttp__tokens + 20)
#define vhttp_TOKEN_AUTHORIZATION (vhttp__tokens + 21)
#define vhttp_TOKEN_CACHE_CONTROL (vhttp__tokens + 22)
#define vhttp_TOKEN_CACHE_DIGEST (vhttp__tokens + 23)
#define vhttp_TOKEN_CONNECTION (vhttp__tokens + 24)
#define vhttp_TOKEN_CONTENT_DISPOSITION (vhttp__tokens + 25)
#define vhttp_TOKEN_CONTENT_ENCODING (vhttp__tokens + 26)
#define vhttp_TOKEN_CONTENT_LANGUAGE (vhttp__tokens + 27)
#define vhttp_TOKEN_CONTENT_LENGTH (vhttp__tokens + 28)
#define vhttp_TOKEN_CONTENT_LOCATION (vhttp__tokens + 29)
#define vhttp_TOKEN_CONTENT_RANGE (vhttp__tokens + 30)
#define vhttp_TOKEN_CONTENT_SECURITY_POLICY (vhttp__tokens + 31)
#define vhttp_TOKEN_CONTENT_TYPE (vhttp__tokens + 32)
#define vhttp_TOKEN_COOKIE (vhttp__tokens + 33)
#define vhttp_TOKEN_DATAGRAM_FLOW_ID (vhttp__tokens + 34)
#define vhttp_TOKEN_DATE (vhttp__tokens + 35)
#define vhttp_TOKEN_EARLY_DATA (vhttp__tokens + 36)
#define vhttp_TOKEN_ETAG (vhttp__tokens + 37)
#define vhttp_TOKEN_EXPECT (vhttp__tokens + 38)
#define vhttp_TOKEN_EXPECT_CT (vhttp__tokens + 39)
#define vhttp_TOKEN_EXPIRES (vhttp__tokens + 40)
#define vhttp_TOKEN_FORWARDED (vhttp__tokens + 41)
#define vhttp_TOKEN_FROM (vhttp__tokens + 42)
#define vhttp_TOKEN_HOST (vhttp__tokens + 43)
#define vhttp_TOKEN_HTTP2_SETTINGS (vhttp__tokens + 44)
#define vhttp_TOKEN_IF_MATCH (vhttp__tokens + 45)
#define vhttp_TOKEN_IF_MODIFIED_SINCE (vhttp__tokens + 46)
#define vhttp_TOKEN_IF_NONE_MATCH (vhttp__tokens + 47)
#define vhttp_TOKEN_IF_RANGE (vhttp__tokens + 48)
#define vhttp_TOKEN_IF_UNMODIFIED_SINCE (vhttp__tokens + 49)
#define vhttp_TOKEN_KEEP_ALIVE (vhttp__tokens + 50)
#define vhttp_TOKEN_LAST_MODIFIED (vhttp__tokens + 51)
#define vhttp_TOKEN_LINK (vhttp__tokens + 52)
#define vhttp_TOKEN_LOCATION (vhttp__tokens + 53)
#define vhttp_TOKEN_MAX_FORWARDS (vhttp__tokens + 54)
#define vhttp_TOKEN_NO_EARLY_HINTS (vhttp__tokens + 55)
#define vhttp_TOKEN_ORIGIN (vhttp__tokens + 56)
#define vhttp_TOKEN_PRIORITY (vhttp__tokens + 57)
#define vhttp_TOKEN_PROXY_AUTHENTICATE (vhttp__tokens + 58)
#define vhttp_TOKEN_PROXY_AUTHORIZATION (vhttp__tokens + 59)
#define vhttp_TOKEN_PROXY_CONNECTION (vhttp__tokens + 60)
#define vhttp_TOKEN_PURPOSE (vhttp__tokens + 61)
#define vhttp_TOKEN_RANGE (vhttp__tokens + 62)
#define vhttp_TOKEN_REFERER (vhttp__tokens + 63)
#define vhttp_TOKEN_REFRESH (vhttp__tokens + 64)
#define vhttp_TOKEN_RETRY_AFTER (vhttp__tokens + 65)
#define vhttp_TOKEN_SERVER (vhttp__tokens + 66)
#define vhttp_TOKEN_SET_COOKIE (vhttp__tokens + 67)
#define vhttp_TOKEN_STRICT_TRANSPORT_SECURITY (vhttp__tokens + 68)
#define vhttp_TOKEN_TE (vhttp__tokens + 69)
#define vhttp_TOKEN_TIMING_ALLOW_ORIGIN (vhttp__tokens + 70)
#define vhttp_TOKEN_TRANSFER_ENCODING (vhttp__tokens + 71)
#define vhttp_TOKEN_UPGRADE (vhttp__tokens + 72)
#define vhttp_TOKEN_UPGRADE_INSECURE_REQUESTS (vhttp__tokens + 73)
#define vhttp_TOKEN_USER_AGENT (vhttp__tokens + 74)
#define vhttp_TOKEN_VARY (vhttp__tokens + 75)
#define vhttp_TOKEN_VIA (vhttp__tokens + 76)
#define vhttp_TOKEN_WWW_AUTHENTICATE (vhttp__tokens + 77)
#define vhttp_TOKEN_X_COMPRESS_HINT (vhttp__tokens + 78)
#define vhttp_TOKEN_X_CONTENT_TYPE_OPTIONS (vhttp__tokens + 79)
#define vhttp_TOKEN_X_FORWARDED_FOR (vhttp__tokens + 80)
#define vhttp_TOKEN_X_FRAME_OPTIONS (vhttp__tokens + 81)
#define vhttp_TOKEN_X_REPROXY_URL (vhttp__tokens + 82)
#define vhttp_TOKEN_X_TRAFFIC (vhttp__tokens + 83)
#define vhttp_TOKEN_X_XSS_PROTECTION (vhttp__tokens + 84)

extern const vhttp_hpack_static_table_entry_t vhttp_hpack_static_table[61];
extern const vhttp_qpack_static_table_entry_t vhttp_qpack_static_table[99];

typedef int32_t (*vhttp_qpack_lookup_static_cb)(vhttp_iovec_t value, int *is_exact);
extern const vhttp_qpack_lookup_static_cb vhttp_qpack_lookup_static[85];

int32_t vhttp_qpack_lookup_authority(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_method(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_path(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_protocol(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_scheme(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_status(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_accept(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_accept_charset(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_accept_encoding(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_accept_language(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_accept_ranges(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_access_control_allow_credentials(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_access_control_allow_headers(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_access_control_allow_methods(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_access_control_allow_origin(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_access_control_expose_headers(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_access_control_request_headers(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_access_control_request_method(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_age(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_allow(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_alt_svc(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_authorization(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_cache_control(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_cache_digest(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_connection(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_content_disposition(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_content_encoding(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_content_language(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_content_length(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_content_location(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_content_range(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_content_security_policy(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_content_type(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_cookie(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_datagram_flow_id(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_date(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_early_data(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_etag(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_expect(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_expect_ct(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_expires(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_forwarded(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_from(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_host(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_http2_settings(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_if_match(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_if_modified_since(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_if_none_match(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_if_range(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_if_unmodified_since(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_keep_alive(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_last_modified(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_link(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_location(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_max_forwards(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_no_early_hints(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_origin(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_priority(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_proxy_authenticate(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_proxy_authorization(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_proxy_connection(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_purpose(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_range(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_referer(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_refresh(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_retry_after(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_server(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_set_cookie(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_strict_transport_security(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_te(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_timing_allow_origin(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_transfer_encoding(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_upgrade(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_upgrade_insecure_requests(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_user_agent(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_vary(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_via(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_www_authenticate(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_x_compress_hint(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_x_content_type_options(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_x_forwarded_for(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_x_frame_options(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_x_reproxy_url(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_x_traffic(vhttp_iovec_t value, int *is_exact);
int32_t vhttp_qpack_lookup_x_xss_protection(vhttp_iovec_t value, int *is_exact);

#endif
